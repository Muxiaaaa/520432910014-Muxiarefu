1、对创意编程的理解：
如今，艺术与科技对于⼤多数的⼈来说是绝对的对⽴⾯，科技是以数据为
主要驱动的，⽽艺术则是情感驱动。科技以技术⻅⻓，⽽艺术却通常被认为以
主观表达⻅⻓。然⽽，创意编程是两者的结合。
纵观历史，我们可以发现⼀个很有趣的现象：⼀开始，创意和编程这两者
各⾛各的，然⽽，随着编程技术的成熟，创意和编程开始⾸牵⼿，⼀起⾛。毫
⽆疑问，技术⼀直是艺术发展的助推剂，⽐如：照相技术的诞⽣打破⻄⽅传统
绘画观念及⾄艺术的观念，催⽣了印象画派的崛起。在这个互联⽹时代，每个
⼈都应该去拥抱新的技术。我们只要了解⾃⼰是如何思考，并将这个思考过程
⽤编程语⾔去描述，计算机就会通过其算法帮助我们实现畅想，这就是创意编
程的⼒量。
创意编程⼜是⼀个不同于典型计算机编程体系的领域，其⽬的在于创造⼀
些有具有创意艺术表现⼒的东⻄，⽽⾮为了实现某种类似于⼈脸识别⼀类⼀般
意义上的功能性。设计领域中⼀些经常被提及的交互设计、信息可视化和⽣成
艺术之类的术语所涉及的内涵和外延都可以被认为是创意编程的不同形式，即
以代码为表现形式和表达⽅式的艺术作品。
2、思考与讨论：
⽣成艺术是指如果仔细观察艺术家与科学家利⽤计算机所做的事情，那就
是让赋予计算机⾃主性，设计了⼀定的规则让它们⾃由发挥，从⽽得到了⽆法
复制、美丽的结果。
艺术家通过写命令但借助设备/⼯具创造艺术作品，这些由艺术家开发的程
序或完成的作品，还是艺术品吗？ 我认为还是算艺术品。
如果你在家⾥重新创建了⼀个索尔·勒维特（Sol LeWitt）[Wall Drawing]作品，
它会像蓬⽪杜·梅兹中⼼展出的作品那样具有同样的真实感吗？ 不会
这种艺术过程与⾳乐演奏家表演别⼈写的歌曲或乐谱的⾳乐表演相⽐，是否
不同？ 个⼈认为有很⼤的不同。